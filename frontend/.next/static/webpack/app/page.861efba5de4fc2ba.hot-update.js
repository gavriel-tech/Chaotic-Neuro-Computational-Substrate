"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/stores/simulation.ts":
/*!**********************************!*\
  !*** ./lib/stores/simulation.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_SIMULATION_NODES: function() { return /* binding */ MAX_SIMULATION_NODES; },\n/* harmony export */   useSimulationStore: function() { return /* binding */ useSimulationStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n\nconst DEFAULT_GRID = 128;\nconst MAX_NODES = 1024;\nconst generateDefaultField = (width, height)=>{\n    const data = new Float32Array(width * height);\n    for(let y = 0; y < height; y += 1){\n        for(let x = 0; x < width; x += 1){\n            const dx = (x / width - 0.5) * Math.PI * 4;\n            const dy = (y / height - 0.5) * Math.PI * 4;\n            data[y * width + x] = Math.sin(dx) * Math.cos(dy) * 0.5;\n        }\n    }\n    return data;\n};\nconst initialOscillatorPositions = ()=>{\n    const data = new Float32Array(MAX_NODES * 3);\n    for(let i = 0; i < MAX_NODES; i += 1){\n        data[i * 3] = (Math.random() - 0.5) * 10;\n        data[i * 3 + 1] = 0;\n        data[i * 3 + 2] = (Math.random() - 0.5) * 10;\n    }\n    return data;\n};\nconst initialOscillatorAmplitude = ()=>new Float32Array(MAX_NODES).fill(0.25);\nconst useSimulationStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set)=>({\n        gridWidth: DEFAULT_GRID,\n        gridHeight: DEFAULT_GRID,\n        field: generateDefaultField(DEFAULT_GRID, DEFAULT_GRID),\n        timestamp: 0,\n        oscillatorPositions: initialOscillatorPositions(),\n        oscillatorAmplitudes: initialOscillatorAmplitude(),\n        activeCount: 64,\n        connected: false,\n        connectionState: \"disconnected\",\n        simulationRunning: false,\n        lastUpdateTime: null,\n        isStale: false,\n        thrml: {\n            performanceMode: \"speed\",\n            temperature: 1.0,\n            energy: null,\n            gibbsSteps: 5,\n            cdK: 1,\n            enabled: true\n        },\n        setField: (data, width, height)=>set({\n                field: new Float32Array(data),\n                gridWidth: width,\n                gridHeight: height\n            }),\n        setOscillators: (positions, amplitudes, activeCount)=>set({\n                oscillatorPositions: new Float32Array(positions),\n                oscillatorAmplitudes: new Float32Array(amplitudes),\n                activeCount\n            }),\n        setTimestamp: (timestamp)=>set({\n                timestamp,\n                lastUpdateTime: Date.now(),\n                isStale: false,\n                connectionState: \"connected\"\n            }),\n        setConnected: (connected)=>set({\n                connected\n            }),\n        setConnectionState: (connectionState)=>set({\n                connectionState\n            }),\n        setSimulationRunning: (simulationRunning)=>set({\n                simulationRunning\n            }),\n        updateLastUpdateTime: (epochMs)=>set({\n                lastUpdateTime: epochMs,\n                isStale: false,\n                connectionState: \"connected\"\n            }),\n        markStale: ()=>set({\n                isStale: true,\n                connectionState: \"stale\"\n            }),\n        checkStaleStatus: function() {\n            let staleThresholdMs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 3000;\n            return set((state)=>{\n                if (state.lastUpdateTime === null) {\n                    return {};\n                }\n                const now = Date.now();\n                const shouldBeStale = now - state.lastUpdateTime > staleThresholdMs;\n                if (shouldBeStale !== state.isStale) {\n                    return {\n                        isStale: shouldBeStale,\n                        connectionState: shouldBeStale ? \"stale\" : \"connected\"\n                    };\n                }\n                return {};\n            });\n        },\n        setThrmlMode: (mode)=>set((state)=>({\n                    thrml: {\n                        ...state.thrml,\n                        performanceMode: mode\n                    }\n                })),\n        setThrmlTemperature: (temperature)=>set((state)=>({\n                    thrml: {\n                        ...state.thrml,\n                        temperature\n                    }\n                })),\n        updateThrmlEnergy: (energy)=>set((state)=>({\n                    thrml: {\n                        ...state.thrml,\n                        energy\n                    }\n                })),\n        updateThrmlConfig: (config)=>set((state)=>({\n                    thrml: {\n                        ...state.thrml,\n                        ...config\n                    }\n                }))\n    }));\nconst MAX_SIMULATION_NODES = MAX_NODES;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdG9yZXMvc2ltdWxhdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFFakMsTUFBTUMsZUFBZTtBQUNyQixNQUFNQyxZQUFZO0FBRWxCLE1BQU1DLHVCQUF1QixDQUFDQyxPQUFlQztJQUMzQyxNQUFNQyxPQUFPLElBQUlDLGFBQWFILFFBQVFDO0lBQ3RDLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJSCxRQUFRRyxLQUFLLEVBQUc7UUFDbEMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlMLE9BQU9LLEtBQUssRUFBRztZQUNqQyxNQUFNQyxLQUFLLENBQUNELElBQUlMLFFBQVEsR0FBRSxJQUFLTyxLQUFLQyxFQUFFLEdBQUc7WUFDekMsTUFBTUMsS0FBSyxDQUFDTCxJQUFJSCxTQUFTLEdBQUUsSUFBS00sS0FBS0MsRUFBRSxHQUFHO1lBQzFDTixJQUFJLENBQUNFLElBQUlKLFFBQVFLLEVBQUUsR0FBR0UsS0FBS0csR0FBRyxDQUFDSixNQUFNQyxLQUFLSSxHQUFHLENBQUNGLE1BQU07UUFDdEQ7SUFDRjtJQUNBLE9BQU9QO0FBQ1Q7QUFFQSxNQUFNVSw2QkFBNkI7SUFDakMsTUFBTVYsT0FBTyxJQUFJQyxhQUFhTCxZQUFZO0lBQzFDLElBQUssSUFBSWUsSUFBSSxHQUFHQSxJQUFJZixXQUFXZSxLQUFLLEVBQUc7UUFDckNYLElBQUksQ0FBQ1csSUFBSSxFQUFFLEdBQUcsQ0FBQ04sS0FBS08sTUFBTSxLQUFLLEdBQUUsSUFBSztRQUN0Q1osSUFBSSxDQUFDVyxJQUFJLElBQUksRUFBRSxHQUFHO1FBQ2xCWCxJQUFJLENBQUNXLElBQUksSUFBSSxFQUFFLEdBQUcsQ0FBQ04sS0FBS08sTUFBTSxLQUFLLEdBQUUsSUFBSztJQUM1QztJQUNBLE9BQU9aO0FBQ1Q7QUFFQSxNQUFNYSw2QkFBNkIsSUFBTSxJQUFJWixhQUFhTCxXQUFXa0IsSUFBSSxDQUFDO0FBOENuRSxNQUFNQyxxQkFBcUJyQiwrQ0FBTUEsQ0FBa0IsQ0FBQ3NCLE1BQVM7UUFDbEVDLFdBQVd0QjtRQUNYdUIsWUFBWXZCO1FBQ1p3QixPQUFPdEIscUJBQXFCRixjQUFjQTtRQUMxQ3lCLFdBQVc7UUFDWEMscUJBQXFCWDtRQUNyQlksc0JBQXNCVDtRQUN0QlUsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLGlCQUFpQjtRQUNqQkMsbUJBQW1CO1FBQ25CQyxnQkFBZ0I7UUFDaEJDLFNBQVM7UUFDVEMsT0FBTztZQUNMQyxpQkFBaUI7WUFDakJDLGFBQWE7WUFDYkMsUUFBUTtZQUNSQyxZQUFZO1lBQ1pDLEtBQUs7WUFDTEMsU0FBUztRQUNYO1FBQ0FDLFVBQVUsQ0FBQ3BDLE1BQU1GLE9BQU9DLFNBQ3RCaUIsSUFBSTtnQkFDRkcsT0FBTyxJQUFJbEIsYUFBYUQ7Z0JBQ3hCaUIsV0FBV25CO2dCQUNYb0IsWUFBWW5CO1lBQ2Q7UUFDRnNDLGdCQUFnQixDQUFDQyxXQUFXQyxZQUFZaEIsY0FDdENQLElBQUk7Z0JBQ0ZLLHFCQUFxQixJQUFJcEIsYUFBYXFDO2dCQUN0Q2hCLHNCQUFzQixJQUFJckIsYUFBYXNDO2dCQUN2Q2hCO1lBQ0Y7UUFDRmlCLGNBQWMsQ0FBQ3BCLFlBQ2JKLElBQUk7Z0JBQ0ZJO2dCQUNBTyxnQkFBZ0JjLEtBQUtDLEdBQUc7Z0JBQ3hCZCxTQUFTO2dCQUNUSCxpQkFBaUI7WUFDbkI7UUFDRmtCLGNBQWMsQ0FBQ25CLFlBQWNSLElBQUk7Z0JBQUVRO1lBQVU7UUFDN0NvQixvQkFBb0IsQ0FBQ25CLGtCQUFvQlQsSUFBSTtnQkFBRVM7WUFBZ0I7UUFDL0RvQixzQkFBc0IsQ0FBQ25CLG9CQUFzQlYsSUFBSTtnQkFBRVU7WUFBa0I7UUFDckVvQixzQkFBc0IsQ0FBQ0MsVUFDckIvQixJQUFJO2dCQUNGVyxnQkFBZ0JvQjtnQkFDaEJuQixTQUFTO2dCQUNUSCxpQkFBaUI7WUFDbkI7UUFDRnVCLFdBQVcsSUFDVGhDLElBQUk7Z0JBQ0ZZLFNBQVM7Z0JBQ1RILGlCQUFpQjtZQUNuQjtRQUNGd0Isa0JBQWtCO2dCQUFDQyxvRkFBbUI7bUJBQ3BDbEMsSUFBSSxDQUFDbUM7Z0JBQ0gsSUFBSUEsTUFBTXhCLGNBQWMsS0FBSyxNQUFNO29CQUNqQyxPQUFPLENBQUM7Z0JBQ1Y7Z0JBRUEsTUFBTWUsTUFBTUQsS0FBS0MsR0FBRztnQkFDcEIsTUFBTVUsZ0JBQWdCVixNQUFNUyxNQUFNeEIsY0FBYyxHQUFHdUI7Z0JBRW5ELElBQUlFLGtCQUFrQkQsTUFBTXZCLE9BQU8sRUFBRTtvQkFDbkMsT0FBTzt3QkFDTEEsU0FBU3dCO3dCQUNUM0IsaUJBQWlCMkIsZ0JBQWdCLFVBQVU7b0JBQzdDO2dCQUNGO2dCQUVBLE9BQU8sQ0FBQztZQUNWOztRQUNGQyxjQUFjLENBQUNDLE9BQ2J0QyxJQUFJLENBQUNtQyxRQUFXO29CQUNkdEIsT0FBTzt3QkFBRSxHQUFHc0IsTUFBTXRCLEtBQUs7d0JBQUVDLGlCQUFpQndCO29CQUFLO2dCQUNqRDtRQUNGQyxxQkFBcUIsQ0FBQ3hCLGNBQ3BCZixJQUFJLENBQUNtQyxRQUFXO29CQUNkdEIsT0FBTzt3QkFBRSxHQUFHc0IsTUFBTXRCLEtBQUs7d0JBQUVFO29CQUFZO2dCQUN2QztRQUNGeUIsbUJBQW1CLENBQUN4QixTQUNsQmhCLElBQUksQ0FBQ21DLFFBQVc7b0JBQ2R0QixPQUFPO3dCQUFFLEdBQUdzQixNQUFNdEIsS0FBSzt3QkFBRUc7b0JBQU87Z0JBQ2xDO1FBQ0Z5QixtQkFBbUIsQ0FBQ0MsU0FDbEIxQyxJQUFJLENBQUNtQyxRQUFXO29CQUNkdEIsT0FBTzt3QkFBRSxHQUFHc0IsTUFBTXRCLEtBQUs7d0JBQUUsR0FBRzZCLE1BQU07b0JBQUM7Z0JBQ3JDO0lBQ0osSUFBSTtBQUVHLE1BQU1DLHVCQUF1Qi9ELFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3N0b3Jlcy9zaW11bGF0aW9uLnRzP2M2ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInp1c3RhbmRcIjtcclxuXHJcbmNvbnN0IERFRkFVTFRfR1JJRCA9IDEyODtcclxuY29uc3QgTUFYX05PREVTID0gMTAyNDtcclxuXHJcbmNvbnN0IGdlbmVyYXRlRGVmYXVsdEZpZWxkID0gKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSA9PiB7XHJcbiAgY29uc3QgZGF0YSA9IG5ldyBGbG9hdDMyQXJyYXkod2lkdGggKiBoZWlnaHQpO1xyXG4gIGZvciAobGV0IHkgPSAwOyB5IDwgaGVpZ2h0OyB5ICs9IDEpIHtcclxuICAgIGZvciAobGV0IHggPSAwOyB4IDwgd2lkdGg7IHggKz0gMSkge1xyXG4gICAgICBjb25zdCBkeCA9ICh4IC8gd2lkdGggLSAwLjUpICogTWF0aC5QSSAqIDQ7XHJcbiAgICAgIGNvbnN0IGR5ID0gKHkgLyBoZWlnaHQgLSAwLjUpICogTWF0aC5QSSAqIDQ7XHJcbiAgICAgIGRhdGFbeSAqIHdpZHRoICsgeF0gPSBNYXRoLnNpbihkeCkgKiBNYXRoLmNvcyhkeSkgKiAwLjU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBkYXRhO1xyXG59O1xyXG5cclxuY29uc3QgaW5pdGlhbE9zY2lsbGF0b3JQb3NpdGlvbnMgPSAoKSA9PiB7XHJcbiAgY29uc3QgZGF0YSA9IG5ldyBGbG9hdDMyQXJyYXkoTUFYX05PREVTICogMyk7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBNQVhfTk9ERVM7IGkgKz0gMSkge1xyXG4gICAgZGF0YVtpICogM10gPSAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiAxMDtcclxuICAgIGRhdGFbaSAqIDMgKyAxXSA9IDA7XHJcbiAgICBkYXRhW2kgKiAzICsgMl0gPSAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiAxMDtcclxuICB9XHJcbiAgcmV0dXJuIGRhdGE7XHJcbn07XHJcblxyXG5jb25zdCBpbml0aWFsT3NjaWxsYXRvckFtcGxpdHVkZSA9ICgpID0+IG5ldyBGbG9hdDMyQXJyYXkoTUFYX05PREVTKS5maWxsKDAuMjUpO1xyXG5cclxuaW50ZXJmYWNlIFRIUk1MU3RhdGUge1xyXG4gIHBlcmZvcm1hbmNlTW9kZTogJ3NwZWVkJyB8ICdhY2N1cmFjeScgfCAncmVzZWFyY2gnO1xyXG4gIHRlbXBlcmF0dXJlOiBudW1iZXI7XHJcbiAgZW5lcmd5OiBudW1iZXIgfCBudWxsO1xyXG4gIGdpYmJzU3RlcHM6IG51bWJlcjtcclxuICBjZEs6IG51bWJlcjtcclxuICBlbmFibGVkOiBib29sZWFuO1xyXG59XHJcblxyXG50eXBlIENvbm5lY3Rpb25TdGF0ZSA9ICdkaXNjb25uZWN0ZWQnIHwgJ2Nvbm5lY3RpbmcnIHwgJ2Nvbm5lY3RlZCcgfCAncmVjb25uZWN0aW5nJyB8ICdzdGFsZSc7XHJcblxyXG5pbnRlcmZhY2UgU2ltdWxhdGlvblN0YXRlIHtcclxuICBncmlkV2lkdGg6IG51bWJlcjtcclxuICBncmlkSGVpZ2h0OiBudW1iZXI7XHJcbiAgZmllbGQ6IEZsb2F0MzJBcnJheTtcclxuICB0aW1lc3RhbXA6IG51bWJlcjtcclxuICBvc2NpbGxhdG9yUG9zaXRpb25zOiBGbG9hdDMyQXJyYXk7XHJcbiAgb3NjaWxsYXRvckFtcGxpdHVkZXM6IEZsb2F0MzJBcnJheTtcclxuICBhY3RpdmVDb3VudDogbnVtYmVyO1xyXG4gIGNvbm5lY3RlZDogYm9vbGVhbjtcclxuICBjb25uZWN0aW9uU3RhdGU6IENvbm5lY3Rpb25TdGF0ZTtcclxuICBzaW11bGF0aW9uUnVubmluZzogYm9vbGVhbjtcclxuICBsYXN0VXBkYXRlVGltZTogbnVtYmVyIHwgbnVsbDtcclxuICBpc1N0YWxlOiBib29sZWFuO1xyXG4gIHRocm1sOiBUSFJNTFN0YXRlO1xyXG4gIHNldEZpZWxkOiAoZGF0YTogRmxvYXQzMkFycmF5LCB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcikgPT4gdm9pZDtcclxuICBzZXRPc2NpbGxhdG9yczogKFxyXG4gICAgcG9zaXRpb25zOiBGbG9hdDMyQXJyYXksXHJcbiAgICBhbXBsaXR1ZGVzOiBGbG9hdDMyQXJyYXksXHJcbiAgICBhY3RpdmVDb3VudDogbnVtYmVyXHJcbiAgKSA9PiB2b2lkO1xyXG4gIHNldFRpbWVzdGFtcDogKHRpbWU6IG51bWJlcikgPT4gdm9pZDtcclxuICBzZXRDb25uZWN0ZWQ6IChjb25uZWN0ZWQ6IGJvb2xlYW4pID0+IHZvaWQ7XHJcbiAgc2V0Q29ubmVjdGlvblN0YXRlOiAoc3RhdGU6IENvbm5lY3Rpb25TdGF0ZSkgPT4gdm9pZDtcclxuICBzZXRTaW11bGF0aW9uUnVubmluZzogKHJ1bm5pbmc6IGJvb2xlYW4pID0+IHZvaWQ7XHJcbiAgdXBkYXRlTGFzdFVwZGF0ZVRpbWU6IChlcG9jaE1zOiBudW1iZXIpID0+IHZvaWQ7XHJcbiAgbWFya1N0YWxlOiAoKSA9PiB2b2lkO1xyXG4gIGNoZWNrU3RhbGVTdGF0dXM6IChzdGFsZVRocmVzaG9sZE1zPzogbnVtYmVyKSA9PiB2b2lkO1xyXG4gIHNldFRocm1sTW9kZTogKG1vZGU6ICdzcGVlZCcgfCAnYWNjdXJhY3knIHwgJ3Jlc2VhcmNoJykgPT4gdm9pZDtcclxuICBzZXRUaHJtbFRlbXBlcmF0dXJlOiAodGVtcGVyYXR1cmU6IG51bWJlcikgPT4gdm9pZDtcclxuICB1cGRhdGVUaHJtbEVuZXJneTogKGVuZXJneTogbnVtYmVyKSA9PiB2b2lkO1xyXG4gIHVwZGF0ZVRocm1sQ29uZmlnOiAoY29uZmlnOiBQYXJ0aWFsPFRIUk1MU3RhdGU+KSA9PiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdXNlU2ltdWxhdGlvblN0b3JlID0gY3JlYXRlPFNpbXVsYXRpb25TdGF0ZT4oKHNldCkgPT4gKHtcclxuICBncmlkV2lkdGg6IERFRkFVTFRfR1JJRCxcclxuICBncmlkSGVpZ2h0OiBERUZBVUxUX0dSSUQsXHJcbiAgZmllbGQ6IGdlbmVyYXRlRGVmYXVsdEZpZWxkKERFRkFVTFRfR1JJRCwgREVGQVVMVF9HUklEKSxcclxuICB0aW1lc3RhbXA6IDAsXHJcbiAgb3NjaWxsYXRvclBvc2l0aW9uczogaW5pdGlhbE9zY2lsbGF0b3JQb3NpdGlvbnMoKSxcclxuICBvc2NpbGxhdG9yQW1wbGl0dWRlczogaW5pdGlhbE9zY2lsbGF0b3JBbXBsaXR1ZGUoKSxcclxuICBhY3RpdmVDb3VudDogNjQsXHJcbiAgY29ubmVjdGVkOiBmYWxzZSxcclxuICBjb25uZWN0aW9uU3RhdGU6ICdkaXNjb25uZWN0ZWQnLFxyXG4gIHNpbXVsYXRpb25SdW5uaW5nOiBmYWxzZSxcclxuICBsYXN0VXBkYXRlVGltZTogbnVsbCxcclxuICBpc1N0YWxlOiBmYWxzZSxcclxuICB0aHJtbDoge1xyXG4gICAgcGVyZm9ybWFuY2VNb2RlOiAnc3BlZWQnLFxyXG4gICAgdGVtcGVyYXR1cmU6IDEuMCxcclxuICAgIGVuZXJneTogbnVsbCxcclxuICAgIGdpYmJzU3RlcHM6IDUsXHJcbiAgICBjZEs6IDEsXHJcbiAgICBlbmFibGVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgc2V0RmllbGQ6IChkYXRhLCB3aWR0aCwgaGVpZ2h0KSA9PlxyXG4gICAgc2V0KHtcclxuICAgICAgZmllbGQ6IG5ldyBGbG9hdDMyQXJyYXkoZGF0YSksXHJcbiAgICAgIGdyaWRXaWR0aDogd2lkdGgsXHJcbiAgICAgIGdyaWRIZWlnaHQ6IGhlaWdodCxcclxuICAgIH0pLFxyXG4gIHNldE9zY2lsbGF0b3JzOiAocG9zaXRpb25zLCBhbXBsaXR1ZGVzLCBhY3RpdmVDb3VudCkgPT5cclxuICAgIHNldCh7XHJcbiAgICAgIG9zY2lsbGF0b3JQb3NpdGlvbnM6IG5ldyBGbG9hdDMyQXJyYXkocG9zaXRpb25zKSxcclxuICAgICAgb3NjaWxsYXRvckFtcGxpdHVkZXM6IG5ldyBGbG9hdDMyQXJyYXkoYW1wbGl0dWRlcyksXHJcbiAgICAgIGFjdGl2ZUNvdW50LFxyXG4gICAgfSksXHJcbiAgc2V0VGltZXN0YW1wOiAodGltZXN0YW1wKSA9PlxyXG4gICAgc2V0KHtcclxuICAgICAgdGltZXN0YW1wLFxyXG4gICAgICBsYXN0VXBkYXRlVGltZTogRGF0ZS5ub3coKSxcclxuICAgICAgaXNTdGFsZTogZmFsc2UsXHJcbiAgICAgIGNvbm5lY3Rpb25TdGF0ZTogJ2Nvbm5lY3RlZCcsXHJcbiAgICB9KSxcclxuICBzZXRDb25uZWN0ZWQ6IChjb25uZWN0ZWQpID0+IHNldCh7IGNvbm5lY3RlZCB9KSxcclxuICBzZXRDb25uZWN0aW9uU3RhdGU6IChjb25uZWN0aW9uU3RhdGUpID0+IHNldCh7IGNvbm5lY3Rpb25TdGF0ZSB9KSxcclxuICBzZXRTaW11bGF0aW9uUnVubmluZzogKHNpbXVsYXRpb25SdW5uaW5nKSA9PiBzZXQoeyBzaW11bGF0aW9uUnVubmluZyB9KSxcclxuICB1cGRhdGVMYXN0VXBkYXRlVGltZTogKGVwb2NoTXMpID0+XHJcbiAgICBzZXQoe1xyXG4gICAgICBsYXN0VXBkYXRlVGltZTogZXBvY2hNcyxcclxuICAgICAgaXNTdGFsZTogZmFsc2UsXHJcbiAgICAgIGNvbm5lY3Rpb25TdGF0ZTogJ2Nvbm5lY3RlZCcsXHJcbiAgICB9KSxcclxuICBtYXJrU3RhbGU6ICgpID0+XHJcbiAgICBzZXQoe1xyXG4gICAgICBpc1N0YWxlOiB0cnVlLFxyXG4gICAgICBjb25uZWN0aW9uU3RhdGU6ICdzdGFsZScsXHJcbiAgICB9KSxcclxuICBjaGVja1N0YWxlU3RhdHVzOiAoc3RhbGVUaHJlc2hvbGRNcyA9IDMwMDApID0+XHJcbiAgICBzZXQoKHN0YXRlKSA9PiB7XHJcbiAgICAgIGlmIChzdGF0ZS5sYXN0VXBkYXRlVGltZSA9PT0gbnVsbCkge1xyXG4gICAgICAgIHJldHVybiB7fTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcclxuICAgICAgY29uc3Qgc2hvdWxkQmVTdGFsZSA9IG5vdyAtIHN0YXRlLmxhc3RVcGRhdGVUaW1lID4gc3RhbGVUaHJlc2hvbGRNcztcclxuXHJcbiAgICAgIGlmIChzaG91bGRCZVN0YWxlICE9PSBzdGF0ZS5pc1N0YWxlKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlzU3RhbGU6IHNob3VsZEJlU3RhbGUsXHJcbiAgICAgICAgICBjb25uZWN0aW9uU3RhdGU6IHNob3VsZEJlU3RhbGUgPyAnc3RhbGUnIDogJ2Nvbm5lY3RlZCcsXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfSksXHJcbiAgc2V0VGhybWxNb2RlOiAobW9kZSkgPT5cclxuICAgIHNldCgoc3RhdGUpID0+ICh7XHJcbiAgICAgIHRocm1sOiB7IC4uLnN0YXRlLnRocm1sLCBwZXJmb3JtYW5jZU1vZGU6IG1vZGUgfSxcclxuICAgIH0pKSxcclxuICBzZXRUaHJtbFRlbXBlcmF0dXJlOiAodGVtcGVyYXR1cmUpID0+XHJcbiAgICBzZXQoKHN0YXRlKSA9PiAoe1xyXG4gICAgICB0aHJtbDogeyAuLi5zdGF0ZS50aHJtbCwgdGVtcGVyYXR1cmUgfSxcclxuICAgIH0pKSxcclxuICB1cGRhdGVUaHJtbEVuZXJneTogKGVuZXJneSkgPT5cclxuICAgIHNldCgoc3RhdGUpID0+ICh7XHJcbiAgICAgIHRocm1sOiB7IC4uLnN0YXRlLnRocm1sLCBlbmVyZ3kgfSxcclxuICAgIH0pKSxcclxuICB1cGRhdGVUaHJtbENvbmZpZzogKGNvbmZpZykgPT5cclxuICAgIHNldCgoc3RhdGUpID0+ICh7XHJcbiAgICAgIHRocm1sOiB7IC4uLnN0YXRlLnRocm1sLCAuLi5jb25maWcgfSxcclxuICAgIH0pKSxcclxufSkpO1xyXG5cclxuZXhwb3J0IGNvbnN0IE1BWF9TSU1VTEFUSU9OX05PREVTID0gTUFYX05PREVTO1xyXG4iXSwibmFtZXMiOlsiY3JlYXRlIiwiREVGQVVMVF9HUklEIiwiTUFYX05PREVTIiwiZ2VuZXJhdGVEZWZhdWx0RmllbGQiLCJ3aWR0aCIsImhlaWdodCIsImRhdGEiLCJGbG9hdDMyQXJyYXkiLCJ5IiwieCIsImR4IiwiTWF0aCIsIlBJIiwiZHkiLCJzaW4iLCJjb3MiLCJpbml0aWFsT3NjaWxsYXRvclBvc2l0aW9ucyIsImkiLCJyYW5kb20iLCJpbml0aWFsT3NjaWxsYXRvckFtcGxpdHVkZSIsImZpbGwiLCJ1c2VTaW11bGF0aW9uU3RvcmUiLCJzZXQiLCJncmlkV2lkdGgiLCJncmlkSGVpZ2h0IiwiZmllbGQiLCJ0aW1lc3RhbXAiLCJvc2NpbGxhdG9yUG9zaXRpb25zIiwib3NjaWxsYXRvckFtcGxpdHVkZXMiLCJhY3RpdmVDb3VudCIsImNvbm5lY3RlZCIsImNvbm5lY3Rpb25TdGF0ZSIsInNpbXVsYXRpb25SdW5uaW5nIiwibGFzdFVwZGF0ZVRpbWUiLCJpc1N0YWxlIiwidGhybWwiLCJwZXJmb3JtYW5jZU1vZGUiLCJ0ZW1wZXJhdHVyZSIsImVuZXJneSIsImdpYmJzU3RlcHMiLCJjZEsiLCJlbmFibGVkIiwic2V0RmllbGQiLCJzZXRPc2NpbGxhdG9ycyIsInBvc2l0aW9ucyIsImFtcGxpdHVkZXMiLCJzZXRUaW1lc3RhbXAiLCJEYXRlIiwibm93Iiwic2V0Q29ubmVjdGVkIiwic2V0Q29ubmVjdGlvblN0YXRlIiwic2V0U2ltdWxhdGlvblJ1bm5pbmciLCJ1cGRhdGVMYXN0VXBkYXRlVGltZSIsImVwb2NoTXMiLCJtYXJrU3RhbGUiLCJjaGVja1N0YWxlU3RhdHVzIiwic3RhbGVUaHJlc2hvbGRNcyIsInN0YXRlIiwic2hvdWxkQmVTdGFsZSIsInNldFRocm1sTW9kZSIsIm1vZGUiLCJzZXRUaHJtbFRlbXBlcmF0dXJlIiwidXBkYXRlVGhybWxFbmVyZ3kiLCJ1cGRhdGVUaHJtbENvbmZpZyIsImNvbmZpZyIsIk1BWF9TSU1VTEFUSU9OX05PREVTIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/stores/simulation.ts\n"));

/***/ })

});