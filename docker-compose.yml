version: '3.8'

services:
  # ============================================
  # Backend Service (GMCS Python Server)
  # ============================================
  gmcs-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gmcs-backend
    restart: unless-stopped
    
    ports:
      - "8000:8000"
    
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./src:/app/src  # Mount for development (comment out for production)
    
    environment:
      - JAX_PLATFORMS=gpu
      - XLA_PYTHON_CLIENT_PREALLOCATE=false
      - XLA_PYTHON_CLIENT_ALLOCATOR=platform
      - GMCS_HOST=0.0.0.0
      - GMCS_PORT=8000
      - GMCS_LOG_LEVEL=INFO
      - GMCS_AUDIO_ENABLED=false  # Disable audio in Docker
      - CUDA_VISIBLE_DEVICES=0
    
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - gmcs-network

  # ============================================
  # Frontend Service (Next.js)
  # ============================================
  gmcs-frontend:
    image: node:20-alpine
    container_name: gmcs-frontend
    restart: unless-stopped
    
    working_dir: /app
    
    ports:
      - "3000:3000"
    
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Use container's node_modules
      - /app/.next        # Use container's build cache
    
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws/stream
    
    command: sh -c "npm install && npm run dev"
    
    depends_on:
      gmcs-backend:
        condition: service_healthy
    
    networks:
      - gmcs-network

  # ============================================
  # Optional: Nginx Reverse Proxy
  # ============================================
  # nginx:
  #   image: nginx:alpine
  #   container_name: gmcs-nginx
  #   restart: unless-stopped
  #   
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   
  #   depends_on:
  #     - gmcs-backend
  #     - gmcs-frontend
  #   
  #   networks:
  #     - gmcs-network

networks:
  gmcs-network:
    driver: bridge

volumes:
  data:
  logs:
