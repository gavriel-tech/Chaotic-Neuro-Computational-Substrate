"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"bc1ffb61330e\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzJkNDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJiYzFmZmI2MTMzMGVcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/websocket.ts":
/*!**************************!*\
  !*** ./lib/websocket.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GMCSWebSocket: function() { return /* binding */ GMCSWebSocket; }\n/* harmony export */ });\n/* harmony import */ var fflate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fflate */ \"(app-pages-browser)/./node_modules/fflate/esm/browser.js\");\n/* harmony import */ var _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/stores/simulation */ \"(app-pages-browser)/./lib/stores/simulation.ts\");\n/* harmony import */ var _components_UI_Notification__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/UI/Notification */ \"(app-pages-browser)/./components/UI/Notification.tsx\");\n\n\n\nconst HEADER_UINT32_COUNT = 8;\nconst HEADER_FLOAT_COUNT = 1;\nconst HEADER_BYTES = (HEADER_UINT32_COUNT + HEADER_FLOAT_COUNT) * 4;\nconst FLAG_COMPRESSED = 1 << 0;\nclass GMCSWebSocket {\n    connect() {\n        if (this.ws) {\n            return;\n        }\n        const initial = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState();\n        this.lastConnectionState = initial.connected;\n        this.lastSimulationRunning = initial.simulationRunning;\n        this.lastStaleState = initial.isStale;\n        const socket = new WebSocket(this.url);\n        socket.binaryType = \"arraybuffer\";\n        socket.onopen = ()=>{\n            const store = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState();\n            store.setConnected(true);\n            store.updateLastUpdateTime(Date.now());\n            this.startStaleMonitor();\n            this.evaluateStateChange();\n        };\n        socket.onclose = ()=>{\n            const store = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState();\n            store.setConnected(false);\n            store.markStale();\n            this.stopStaleMonitor();\n            this.scheduleReconnect();\n            this.evaluateStateChange();\n        };\n        socket.onerror = ()=>{\n            socket.close();\n        };\n        socket.onmessage = (event)=>{\n            const data = event.data;\n            if (data instanceof ArrayBuffer) {\n                this.handleBuffer(data);\n            } else if (data instanceof Blob) {\n                data.arrayBuffer().then((buffer)=>this.handleBuffer(buffer));\n            } else if (typeof data === \"string\") {\n                this.handleTextMessage(data);\n            }\n        };\n        this.ws = socket;\n    }\n    disconnect() {\n        if (this.reconnectTimer) {\n            clearTimeout(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n        this.stopStaleMonitor();\n        if (this.ws) {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    scheduleReconnect() {\n        if (this.reconnectTimer) {\n            return;\n        }\n        this.reconnectTimer = setTimeout(()=>{\n            this.ws = null;\n            this.reconnectTimer = null;\n            this.connect();\n        }, this.reconnectDelay);\n    }\n    handleBuffer(buffer) {\n        if (buffer.byteLength < HEADER_BYTES) {\n            return;\n        }\n        const header = new DataView(buffer, 0, HEADER_BYTES);\n        const downW = header.getUint32(0, true);\n        const downH = header.getUint32(1 * 4, true);\n        const activeCount = header.getUint32(2 * 4, true);\n        const capacity = header.getUint32(3 * 4, true);\n        const flags = header.getUint32(4 * 4, true);\n        const payloadSize = header.getUint32(5 * 4, true);\n        const storedSize = header.getUint32(6 * 4, true);\n        const runningFlag = header.getUint32(7 * 4, true);\n        const simTime = header.getFloat32(8 * 4, true);\n        const store = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState();\n        store.setSimulationRunning(Boolean(runningFlag));\n        if (payloadSize === 0 || storedSize === 0) {\n            store.setTimestamp(simTime);\n            return;\n        }\n        let payload = new Uint8Array(buffer, HEADER_BYTES, storedSize);\n        if (flags & FLAG_COMPRESSED) {\n            payload = (0,fflate__WEBPACK_IMPORTED_MODULE_2__.decompressSync)(payload);\n        } else if (payloadSize !== payload.length) {\n            payload = payload.slice(0, payloadSize);\n        }\n        let offset = 0;\n        const fieldCount = downW * downH;\n        const fieldArray = new Float32Array(payload.buffer, payload.byteOffset + offset, fieldCount);\n        const fieldCopy = new Float32Array(fieldArray);\n        offset += fieldCount * 4;\n        const oscArray = new Float32Array(payload.buffer, payload.byteOffset + offset, activeCount * 3);\n        const oscCopy = new Float32Array(oscArray);\n        offset += activeCount * 3 * 4;\n        const posArray = new Float32Array(payload.buffer, payload.byteOffset + offset, activeCount * 3);\n        const posCopy = new Float32Array(posArray);\n        offset += activeCount * 3 * 4;\n        const maskArray = new Float32Array(payload.buffer, payload.byteOffset + offset, activeCount);\n        const maskCopy = new Float32Array(maskArray);\n        const amplitudes = new Float32Array(activeCount);\n        for(let i = 0; i < activeCount; i += 1){\n            var _maskCopy_i;\n            amplitudes[i] = Math.abs(oscCopy[i * 3]) * ((_maskCopy_i = maskCopy[i]) !== null && _maskCopy_i !== void 0 ? _maskCopy_i : 1);\n        }\n        store.setField(fieldCopy, downW, downH);\n        store.setOscillators(posCopy, amplitudes, Math.min(activeCount, _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.MAX_SIMULATION_NODES));\n        store.setTimestamp(simTime);\n        this.evaluateStateChange();\n    }\n    startStaleMonitor() {\n        if (this.staleTimer) {\n            return;\n        }\n        this.staleTimer = setInterval(()=>{\n            const before = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState().isStale;\n            _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState().checkStaleStatus();\n            const after = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState().isStale;\n            if (before !== after) {\n                this.evaluateStateChange();\n            }\n        }, 1000);\n    }\n    stopStaleMonitor() {\n        if (this.staleTimer) {\n            clearInterval(this.staleTimer);\n            this.staleTimer = null;\n        }\n    }\n    handleTextMessage(raw) {\n        try {\n            const message = JSON.parse(raw);\n            const store = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState();\n            switch(message.type){\n                case \"STATUS\":\n                    {\n                        if (typeof message.simulation_running === \"boolean\") {\n                            store.setSimulationRunning(message.simulation_running);\n                        }\n                        let touched = false;\n                        if (typeof message.sim_time === \"number\") {\n                            store.setTimestamp(message.sim_time);\n                            touched = true;\n                        }\n                        if (!touched) {\n                            store.updateLastUpdateTime(Date.now());\n                        }\n                        this.evaluateStateChange();\n                        break;\n                    }\n                case \"PONG\":\n                    if (typeof message.simulation_running === \"boolean\") {\n                        store.setSimulationRunning(message.simulation_running);\n                    }\n                    store.updateLastUpdateTime(Date.now());\n                    this.evaluateStateChange();\n                    break;\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.warn(\"Failed to parse WebSocket message\", error);\n        }\n    }\n    evaluateStateChange() {\n        const { connected, simulationRunning, isStale } = _lib_stores_simulation__WEBPACK_IMPORTED_MODULE_0__.useSimulationStore.getState();\n        if (this.lastConnectionState !== null && connected !== this.lastConnectionState) {\n            if (connected) {\n                _components_UI_Notification__WEBPACK_IMPORTED_MODULE_1__.notify.success(\"Reconnected to simulation stream.\");\n            } else {\n                _components_UI_Notification__WEBPACK_IMPORTED_MODULE_1__.notify.error(\"Connection to simulation stream lost. Attempting to reconnect...\");\n            }\n        }\n        if (this.lastStaleState !== null && isStale !== this.lastStaleState) {\n            if (isStale && connected) {\n                _components_UI_Notification__WEBPACK_IMPORTED_MODULE_1__.notify.warning(\"Simulation data stream is stale.\");\n            } else if (!isStale) {\n                _components_UI_Notification__WEBPACK_IMPORTED_MODULE_1__.notify.success(\"Simulation data stream restored.\");\n            }\n        }\n        if (this.lastSimulationRunning !== null && simulationRunning !== this.lastSimulationRunning) {\n            if (simulationRunning) {\n                _components_UI_Notification__WEBPACK_IMPORTED_MODULE_1__.notify.success(\"Simulation running.\");\n            } else if (connected && !isStale) {\n                _components_UI_Notification__WEBPACK_IMPORTED_MODULE_1__.notify.warning(\"Simulation stopped.\");\n            }\n        }\n        this.lastConnectionState = connected;\n        this.lastSimulationRunning = simulationRunning;\n        this.lastStaleState = isStale;\n    }\n    constructor(options = {}){\n        this.ws = null;\n        this.reconnectTimer = null;\n        this.staleTimer = null;\n        this.lastSimulationRunning = null;\n        this.lastConnectionState = false;\n        this.lastStaleState = false;\n        const { url = \"ws://localhost:8000/ws/stream\", reconnectDelay = 2000 } = options;\n        this.url = url;\n        this.reconnectDelay = reconnectDelay;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/websocket.ts\n"));

/***/ })

});